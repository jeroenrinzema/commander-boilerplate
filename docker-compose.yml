version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.0
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - 2181:2181
    networks:
      - kafka
  kafka:
    depends_on:
      - zookeeper
    image: confluentinc/cp-kafka:4.1.0
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
      - 9092:9092
    networks:
      - kafka
  postgres:
    image: postgres:9.5.3
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: commander
      POSTGRES_PASSWORD: TFgvT3Pb3bWEhXKAfgMk63bo
      POSTGRES_DB: commander
    networks:
      - postgres
  logic:
    depends_on:
      - kafka
      - postgres
    build:
      context: logic
    environment:
      KAFKA_SERVERS: kafka:9092
      KAFKA_GROUP: users
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: commander
      POSTGRES_PASSWORD: TFgvT3Pb3bWEhXKAfgMk63bo
      POSTGRES_DB: commander
    networks:
      - postgres
      - kafka
  command:
    depends_on:
      - kafka
    build:
      context: command
    ports:
      - "5050:8080"
    environment:
      KAFKA_SERVERS: kafka:9092
      KAFKA_GROUP: command
    networks:
      - kafka
  projector:
    depends_on:
      - kafka
      - postgres
    build:
      context: projector
    environment:
      KAFKA_SERVERS: kafka:9092
      KAFKA_GROUP: projector
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: commander
      POSTGRES_PASSWORD: TFgvT3Pb3bWEhXKAfgMk63bo
      POSTGRES_DB: commander
    networks:
      - kafka
      - postgres
  query:
    depends_on:
      - postgres
    build:
      context: query
    ports:
      - "5060:8080"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: commander
      POSTGRES_PASSWORD: TFgvT3Pb3bWEhXKAfgMk63bo
      POSTGRES_DB: commander
    networks:
      - postgres
volumes:
  zookeeper:
  kafka:
  postgres:
networks:
  kafka:
  postgres:
